name: Deploy To VPS Server

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP 8.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Create .env file
        run: cp .env.example .env

      - name: Install composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Set Application Encryption Key
        run: php artisan key:generate --ansi

      - name: Create Storage Link
        run: php artisan storage:link

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Install node dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Run Tests
        run: php artisan test

      - name: Upload Built Assets to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: public/build
          target: ${{ vars.APPLICATION_PATH }}

      - name: Deploy Application to Server
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            APP_PATH="${{ vars.APPLICATION_PATH }}"
            cd "$APP_PATH"
            echo "Deploying application in the path $APP_PATH"
            git checkout master
            if git rev-parse -q --verify "refs/tags/${{ github.event.release.tag_name }}"; then
              git tag -d ${{ github.event.release.tag_name }}
            fi
            git fetch --all
            git checkout ${{ github.event.release.tag_name }}
            composer install --no-dev --optimize-autoloader
            #npm ci
            #npm run build
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
